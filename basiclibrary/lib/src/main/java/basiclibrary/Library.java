/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package basiclibrary;

import java.util.Arrays;
import java.util.Random;

public class Library {
    public boolean someLibraryMethod() {
        return true;
    }
    public  static  double getAvg(int [] arr){
        int sum = 0;
        for (int i = 0; i < arr.length ; i++) {
            sum+=arr[i];
        }
        return  (double)sum/arr.length;
    }

    public  static  int [] smallArrayAvg(int [][] arr){
        double oneDimArrayAvg =  getAvg(arr[0]);

        int [] smallestOneDimArrayAvg  = arr[0];
        for (int i = 1; i < arr.length ; i++) {
            if(getAvg(arr[i])< oneDimArrayAvg){
                oneDimArrayAvg = getAvg(arr[i]);
                smallestOneDimArrayAvg = arr[i];
            }
        }
        return  smallestOneDimArrayAvg;

    }
    public static void main(String[] args) {

        System.out.println(Arrays.toString(roll(4)));
        int []  arr= {1,2,3,4};
        int[][] weeklyMonthTemperatures = {
                {66, 64, 58, 65, 71, 57, 60},
                {57, 65, 65, 70, 72, 65, 51},
                {55, 54, 60, 53, 59, 57, 61},
                {65, 56, 55, 52, 55, 62, 57}
        };
        System.out.println(containsDuplicates(arr));
        System.out.println(getAvg(arr));
        System.out.println(Arrays.toString(smallArrayAvg(weeklyMonthTemperatures)));
    }
    public static  int[] roll(int n){
        Random rand = new Random(System.currentTimeMillis());
        int [] rolledArray = new int[n];
        for (int i =0;i<n;i++){
            int roolAttemp = rand.nextInt(6)+1;
            rolledArray[i]=roolAttemp;
        }
        return  rolledArray;


    }

    public static boolean containsDuplicates(int[] arr){
        boolean doesItContain = false;
        for (int i = 0; i < arr.length-1 ; i++) {
            int temp = arr[i];
            for (int j = i+1; j < arr.length ; j++) {
                if(temp == arr[j]){
                    doesItContain = true;
                    break;
                }
            }
            if(doesItContain){
                break;
            }
        }
        return doesItContain;
    }
}
